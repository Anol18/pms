generator client{
    provider = "prisma-client-js"
}

datasource db{
    provider = "mysql"
    url = env("DATABASE_URL")
}

model Projects{
    id Int @id @default(autoincrement())
    projectName String 
    projectDuration Json
    division Json
    district Json
    upazila Json
    ngoApprovalDate String?
    projectBudget String
    reportingPeriod Json?
    status String
    attachmentName String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    DonorInformation DonorInformation[]
    SubGrantPartners SubGrantPartners[]
    Outcome Outcome[]

}
model DonorInformation{
    id Int @id @default(autoincrement())
    name String?
    donorType String?
    address String?
    phone String?
    email String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    projects Projects @relation(fields: [projectID], references: [id])
    projectID Int
}

model SubGrantPartners{
    id Int @id @default(autoincrement())
    name String?
    address String?
    contactName String?
    phone String?
    email String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    projects Projects @relation(fields: [projectID],references: [id])
    projectID Int
}

model Outcome{
    id Int @id @default(autoincrement())
    outcomeName String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    projects Projects @relation(fields: [projectID],references: [id])
    Activity Activity[]
    projectID Int
}
model Activity{
    id Int @id @default(autoincrement())
    activityName String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    outcome Outcome @relation(fields: [outcomeId],references: [id])
    outcomeId Int
    DetailBudget DetailBudget[]
}
model DetailBudget{
        id Int @id @default(autoincrement())
        particular String
        costPerUnit Int
        quantity Int
        perUnitDescription String
        unit Int
        description String
        createdAt DateTime @default(now())
        updatedAt DateTime @updatedAt
        activity Activity @relation(fields: [activityId],references: [id])
        activityId Int
}
model Employee{
    id Int @id @default(autoincrement())
    fullName String
    address String
    phoneNumber String @unique
    alternatePhoneNumber String @unique
    email String @unique
    nid String @unique
    birthday String
    maritalStatus String
    spouseName String?
    spouseEmployer String
    designation String
    employeeId String @unique
    supervisor String
    department String
    workLocation String
    workEmail String @unique
    workPhone String @unique
    cellPhone String @unique
    startDate DateTime
    salary String?
    emergencyContactPersonsFullName String
    emergencyContactPersonsAddress String
    emergencyContactPersonsPrimaryPhone String
    emergencyContactPersonsAlternatePhoene String
    relationship String
}